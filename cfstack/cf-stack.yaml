---
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  A Gatsby single page application hosted on S3 served on CloudFront, source code and deployment controlled by CodeBuild
  and CodePipeline. A Route 53 hosted zone and SSL certificate are required as parameters for this template.
  Once completed the new website will be accessible with secure connection through the hosted zone. All www traffic
  is redirect to the root domain.

Parameters:
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: "subaquatic-pierre"
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: gatsby-pipeline-app
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: master
  GitHubToken:
    NoEcho: true
    Type: String
    Default: token
    Description: Secret OAuthToken with access to Repo. Go to https://github.com/settings/tokens
  HostedZone:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone
    AllowedPattern: "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)"
    ConstraintDescription: Must be a valid DNS zone name.
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Hosted Zone id for the Hosted Zone you're setting up, of the form 'Z23YXV4OVPL04A'
    ConstraintDescription: must be a valid Hosted Zone ID
  CertificateARN:
    Type: String
    Description: Go to https://console.aws.amazon.com/acm - eg. 'arn:aws:acm:us-east-2:658695364897:certificate/56fe4395-3c66-3044-tikl-a159e362g50q'

Mappings:
  RegionToS3ZoneId:
    us-east-1:
      ZoneId: Z3AQBSTGFYJSTF
      Endpoint: .s3-website-us-east-1.amazonaws.com
    us-east-2:
      ZoneId: Z2O1EMRO9K5GLX
      Endpoint: .s3-website.us-east-2.amazonaws.com
    us-west-1:
      ZoneId: Z2F56UZL2M1ACD
      Endpoint: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      ZoneId: Z3BJ6K6RIION7M
      Endpoint: .s3-website-us-west-2.amazonaws.com
    ap-east-1:
      ZoneId: ZNB98KWMFR0R6
      Endpoint: .s3-website.ap-east-1.amazonaws.com
    ap-south-1:
      ZoneId: Z11RGJOFQNVJUP
      Endpoint: .s3-website.ap-south-1.amazonaws.com
    ap-northeast-3:
      ZoneId: Z2YQB5RD63NC85
      Endpoint: .s3-website.ap-northeast-3.amazonaws.com
    ap-northeast-2:
      ZoneId: Z3W03O7B5YMIYP
      Endpoint: .s3-website.ap-northeast-2.amazonaws.com
    ap-southeast-1:
      ZoneId: Z3O0J2DXBE1FTB
      Endpoint: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      ZoneId: Z1WCIGYICN2BYD
      Endpoint: .s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      ZoneId: Z2M4EHUR26P7ZW
      Endpoint: .s3-website-ap-northeast-1.amazonaws.com
    ca-central-1:
      ZoneId: Z1QDHH18159H29
      Endpoint: .s3-website.ca-central-1.amazonaws.com
    eu-central-1:
      ZoneId: Z21DNDUVLTQW6Q
      Endpoint: .s3-website.eu-central-1.amazonaws.com
    eu-west-1:
      ZoneId: Z1BKCTXD74EZPE
      Endpoint: .s3-website-eu-west-1.amazonaws.com
    eu-west-2:
      ZoneId: Z3GKZC51ZF0DB4
      Endpoint: .s3-website.eu-west-2.amazonaws.com
    eu-south-1:
      ZoneId: Z3IXVV8C73GIO3
      Endpoint: .s3-website.dualstack.eu-south-1.amazonaws.com
    eu-west-3:
      ZoneId: Z3R1K369G5AVDG
      Endpoint: .s3-website.eu-west-3.amazonaws.com
    eu-north-1:
      ZoneId: Z3BAZG2TWCNX0D
      Endpoint: .s3-website.eu-north-1.amazonaws.com
    sa-east-1:
      ZoneId: Z7KQH4QJS55SO
      Endpoint: .s3-website-sa-east-1.amazonaws.com

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Site Configuration"
        Parameters:
          - HostedZone
          - HostedZoneId
          - CertificateARN
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
    ParameterLabels:
      HostedZone:
        default: Name of the hosted zone for the S3 bucket
      HostedZoneId:
        default: ID for the hosted zone
      CertificateARN:
        default: ARN for the certificate of hosted zone
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User Name
      GitHubRepo:
        default: GitHub Repository Name
      GitHubBranch:
        default: GitHub Branch Name

Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref HostedZone
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  RedirectBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [".", ["www", !Ref HostedZone]]
      AccessControl: PublicRead
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref HostedZone
          Protocol: https

  PipelineBucket:
    Type: AWS::S3::Bucket

  WebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        Aliases:
          - !Ref HostedZone
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: true
          MaxTTL: 120
          MinTTL: 0
          DefaultTTL: 120
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: root-origin
        DefaultRootObject: index.html
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateARN
          SslSupportMethod: sni-only
        Origins:
          - S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "/",
                  ["origin-access-identity/cloudfront", !Ref CloudFrontOAI],
                ]
            DomainName: !GetAtt SiteBucket.RegionalDomainName
            Id: root-origin

  RedirectCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Redirect www to root domain name
        Aliases:
          - !Join [".", ["www", !Ref HostedZone]]
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: true
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: redirect-origin
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateARN
          SslSupportMethod: sni-only
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName:
              !Join [
                "",
                [
                  !Ref RedirectBucket,
                  !FindInMap [RegionToS3ZoneId, !Ref "AWS::Region", Endpoint],
                ],
              ]
            Id: redirect-origin

  HostedDNSName:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt WebsiteCDN.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref HostedZoneId
      Comment: Alias record to CloudFront distribution
      Name: !Ref HostedZone
      Type: A

  HostedDNSRedirect:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt RedirectCDN.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref HostedZoneId
      Comment: Alias record for www to S3 redirect bucket
      Name: !Join [".", ["www", !Ref HostedZone]]
      Type: A

  CodeBuildDeploySite:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-DeploySite
      Description: Deploy site to S3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2

          env:
            variables:
              NODE_ENV: "development"

          phases:
            install:
              runtime-versions:
                nodejs: 10
              commands:
                - npm install -g jest
                - npm install -g gatsby

            pre_build:
              commands:
                - npm install

            build:
              commands:
                - gatsby build
                - npm run test

            post_build:
              commands:
                - aws s3 cp --recursive ./public/ s3://${SiteBucket}/
          artifacts:
            type: zip
            files:
              - ./public/index.html
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployOutput
              Configuration:
                ProjectName: !Ref CodeBuildDeploySite
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  # Roles and policies
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Join ["-", [!Ref HostedZone, "Access Role"]]

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
            Effect: "Allow"
            Resource: !Join ["", ["arn:aws:s3:::", !Ref SiteBucket, "/*"]]
            Principal:
              Service:
                - codebuild.amazonaws.com
          - Action:
              - s3:GetObject
            Effect: "Allow"
            Resource: !Join ["", ["arn:aws:s3:::", !Ref SiteBucket, "/*"]]
            Principal:
              AWS:
                !Join [
                  "",
                  [
                    "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                    !Ref CloudFrontOAI,
                  ],
                ]

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
            Version: "2012-10-17"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - codebuild:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - s3:*
                  - cloudformation:*
                  - ecs:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
            Version: "2012-10-17"

Outputs:
  WebsiteURL:
    Value: !Join
      - ""
      - - "https://"
        - !Ref HostedDNSName
    Description: The URL of the newly created website

  BucketName:
    Value: !Ref SiteBucket
    Description: Name of S3 bucket to hold website content

  CodePipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
